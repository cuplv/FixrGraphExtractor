package edu.colorado.plv.fixr.protobuf;

message Acdfg {
  message RepoTag {
    optional string repo_name   = 1;
    optional string user_name   = 2;
    optional string url         = 3;
    optional string commit_hash = 4;
  }

  message DataNode {
    required uint64 id   = 1;
    required string name = 2;
    required string type = 3;
  }

  message MiscNode {
    required uint64 id = 1;
  }

  message MethodNode {
    required uint64 id       = 1;
    optional uint64 invokee  = 2;
    required string name     = 3;
    repeated uint64 argument = 4;
  }

  message ControlEdge {
    required uint64 id   = 1;
    required uint64 from = 2;
    required uint64 to   = 3;
  }

  message DefEdge {
    required uint64 id   = 1;
    required uint64 from = 2;
    required uint64 to   = 3;
  }

  message UseEdge {
    required uint64 id   = 1;
    required uint64 from = 2;
    required uint64 to   = 3;
  }

  message TransEdge {
    required uint64 id   = 1;
    required uint64 from = 2;
    required uint64 to   = 3;
  }

  message MethodBag {
    repeated string method = 1;
  }

  message ProvenanceInfo {
    message SourceInfo {
      optional string package_name = 1;
      optional string class_name = 2;
      optional string method_name = 3;
      optional uint32 class_line_number = 4;
      optional uint32 method_line_number = 5;
      optional string source_class_name = 6;
    }

    message GithubInfo {
      optional string user_name = 1;
      optional string repo_name = 2;
      optional string commit_hash = 3;
      optional string path_to_def_file = 4;
    }

    optional SourceInfo source_info = 1;
    optional GithubInfo github_info = 2;
  }

  repeated DataNode    data_node    = 1;
  repeated MiscNode    misc_node    = 2;
  repeated MethodNode  method_node  = 3;
  repeated ControlEdge control_edge = 4;
  repeated DefEdge     def_edge     = 5;
  repeated UseEdge     use_edge     = 6;
  repeated TransEdge   trans_edge   = 7;
  optional RepoTag     repo_tag     = 8;
  optional MethodBag   method_bag   = 9;
  optional ProvenanceInfo provenance_info = 10;
}
