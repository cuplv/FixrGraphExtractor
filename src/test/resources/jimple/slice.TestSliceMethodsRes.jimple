public class slice.TestSliceMethodsRes extends java.lang.Object
{

    public void testSliceMethods01__sliced__()
    {
        slice.TestSliceMethods this;
        int n1, n2, temp$1, temp$2, temp$3, temp$4;
        java.util.Random r, temp$0;
        long temp$5;

        temp$0 = new java.util.Random;
        specialinvoke temp$0.<java.util.Random: void <init>(long)>(0L);
        r = temp$0;
        temp$1 = 1;
        n2 = temp$1;
        temp$2 = 0;
        n1 = temp$2;
        temp$3 = virtualinvoke r.<java.util.Random: int nextInt(int)>(n1);
        temp$5 = (long) n2;
        virtualinvoke r.<java.util.Random: void setSeed(long)>(temp$5);
    }

    public void testSliceMethods02__sliced__()
    {
        slice.TestSliceMethods this;
        int n1, temp$0;
        java.util.Random r, temp$1;
        long temp$2;

        this := @this: slice.TestSliceMethods;
        temp$0 = virtualinvoke this.<slice.TestSliceMethods: int innerMethod(int)>(0);
        n1 = temp$0;
        temp$1 = new java.util.Random;
        temp$2 = (long) n1;
        specialinvoke temp$1.<java.util.Random: void <init>(long)>(temp$2);
    }

    public void testSliceMethods03__sliced__()
    {
        slice.TestSliceMethods this;
        int n1, n2, temp$0, temp$1, temp$2;
        java.util.Random r, temp$3;
        long temp$4;

        temp$1 = 0;
        n1 = temp$1;
        temp$3 = new java.util.Random;
        temp$4 = (long) n1;
        specialinvoke temp$3.<java.util.Random: void <init>(long)>(temp$4);
    }

    public void testSliceMethods04__sliced__()
    {
        slice.TestSliceMethods this;
        int n1, temp$0, temp$1, temp$2, temp$3, temp$5;
        java.util.Random r, temp$4;
        long temp$6;

        this := @this: slice.TestSliceMethods;
        temp$0 = 0;
        n1 = temp$0;
        temp$1 = this.<slice.TestSliceMethods: int innerField1>;
        if temp$1 == 0 goto label0;

        goto label1;

     label0:
        temp$2 = n1;
        temp$3 = temp$2 + 1;
        this.<slice.TestSliceMethods: int innerField1> = temp$3;

     label1:
        temp$4 = new java.util.Random;
        temp$5 = this.<slice.TestSliceMethods: int innerField1>;
        temp$6 = (long) temp$5;
        specialinvoke temp$4.<java.util.Random: void <init>(long)>(temp$6);
    }

    public void testSliceMethods05__sliced__()
    {
        slice.TestSliceMethods this;
        int[] intArray, temp$0;
        int temp$1, temp$2, temp$4;
        java.util.Random r, temp$3;
        long temp$5;

        this := @this: slice.TestSliceMethods;
        intArray = newarray (int)[5];
        temp$0 = intArray;
        temp$1 = 0;
        temp$2 = temp$0[temp$1];
        this.<slice.TestSliceMethods: int innerField1> = temp$2;
        temp$3 = new java.util.Random;
        temp$4 = this.<slice.TestSliceMethods: int innerField1>;
        temp$5 = (long) temp$4;
        specialinvoke temp$3.<java.util.Random: void <init>(long)>(temp$5);
    }

    public void testSliceMethods06__sliced__()
    {
        slice.TestSliceMethods this;
        int n1, temp$0, temp$2, temp$4, temp$6, temp$8, temp$9, temp$11, temp$13, temp$14, temp$16;
        int[] intArray, temp$1, temp$5, temp$7, temp$12;
        int[][] intIntArray, temp$3, temp$10;
        java.util.Random r, temp$15;
        long temp$17;

        this := @this: slice.TestSliceMethods;
        intArray = newarray (int)[5];
        intIntArray = newmultiarray (int)[5][6];
        temp$0 = 0;
        n1 = temp$0;
        temp$1 = intArray;
        temp$2 = 0;
        temp$1[temp$2] = n1;
        temp$3 = intIntArray;
        temp$4 = 1;
        temp$5 = temp$3[temp$4];
        temp$6 = 1;
        temp$7 = intArray;
        temp$8 = 0;
        temp$9 = temp$7[temp$8];
        temp$5[temp$6] = temp$9;
        temp$10 = intIntArray;
        temp$11 = 1;
        temp$12 = temp$10[temp$11];
        temp$13 = 1;
        temp$14 = temp$12[temp$13];
        this.<slice.TestSliceMethods: int innerField1> = temp$14;
        temp$15 = new java.util.Random;
        temp$16 = this.<slice.TestSliceMethods: int innerField1>;
        temp$17 = (long) temp$16;
        specialinvoke temp$15.<java.util.Random: void <init>(long)>(temp$17);
    }
}
