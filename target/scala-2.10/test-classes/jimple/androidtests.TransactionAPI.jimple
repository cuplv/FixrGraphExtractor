public class androidtests.TransactionAPI extends java.lang.Object
{

    public void wrongTransaction(android.database.sqlite.SQLiteOpenHelper)
    {
        androidtests.TransactionAPI this;
        android.database.sqlite.SQLiteOpenHelper helper;
        android.database.sqlite.SQLiteDatabase mDb, temp$0;

        this := @this: androidtests.TransactionAPI;
        helper := @parameter0: android.database.sqlite.SQLiteOpenHelper;
        temp$0 = virtualinvoke helper.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();
        mDb = temp$0;
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();
        return;
    }

    public void rightTransaction(android.database.sqlite.SQLiteOpenHelper)
    {
        androidtests.TransactionAPI this;
        android.database.sqlite.SQLiteOpenHelper helper;
        android.database.sqlite.SQLiteDatabase mDb, temp$0;
        java.lang.Throwable temp$1;

        this := @this: androidtests.TransactionAPI;
        helper := @parameter0: android.database.sqlite.SQLiteOpenHelper;
        temp$0 = virtualinvoke helper.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();
        mDb = temp$0;

     label0:
        nop;
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();
        goto label2;

     label1:
        nop;
        temp$1 := @caughtexception;
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void endTransaction()>();
        throw temp$1;

     label2:
        nop;
        return;

        catch java.lang.Throwable from label0 to label1 with label1;
    }

    public void syncUsers(java.util.List, android.database.sqlite.SQLiteOpenHelper)
    {
        androidtests.TransactionAPI this;
        java.util.List users;
        android.database.sqlite.SQLiteOpenHelper helper;
        android.database.sqlite.SQLiteDatabase mDb, temp$0;
        java.util.Iterator temp$1;
        java.lang.Object u;
        boolean temp$2, temp$3;
        long temp$4;

        this := @this: androidtests.TransactionAPI;
        users := @parameter0: java.util.List;
        helper := @parameter1: android.database.sqlite.SQLiteOpenHelper;
        temp$0 = virtualinvoke helper.<android.database.sqlite.SQLiteOpenHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();
        mDb = temp$0;
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void beginTransaction()>();
        temp$1 = interfaceinvoke users.<java.lang.Iterable: java.util.Iterator iterator()>();

     label0:
        nop;
        temp$2 = interfaceinvoke temp$1.<java.util.Iterator: boolean hasNext()>();
        if temp$2 == 0 goto label4;

        u = interfaceinvoke temp$1.<java.util.Iterator: java.lang.Object next()>();
        temp$3 = virtualinvoke this.<androidtests.TransactionAPI: boolean existsUser(int)>(0);
        if temp$3 == 0 goto label2;

        goto label1;

     label1:
        nop;
        virtualinvoke this.<androidtests.TransactionAPI: void updateUser(java.lang.Object)>(u);
        goto label3;

     label2:
        nop;
        temp$4 = virtualinvoke this.<androidtests.TransactionAPI: long createUserInfo(java.lang.Object)>(u);

     label3:
        nop;
        nop;
        goto label0;

     label4:
        nop;
        virtualinvoke mDb.<android.database.sqlite.SQLiteDatabase: void setTransactionSuccessful()>();
        return;
    }

    public boolean existsUser(int)
    {
        androidtests.TransactionAPI this;
        int userId;
        boolean temp$0;

        this := @this: androidtests.TransactionAPI;
        userId := @parameter0: int;
        temp$0 = 0;
        return temp$0;
    }

    public void updateUser(java.lang.Object)
    {
        androidtests.TransactionAPI this;
        java.lang.Object user;
        int i;

        this := @this: androidtests.TransactionAPI;
        user := @parameter0: java.lang.Object;
        i = 0;
        return;
    }

    public long createUserInfo(java.lang.Object)
    {
        androidtests.TransactionAPI this;
        java.lang.Object user;
        long temp$0;

        this := @this: androidtests.TransactionAPI;
        user := @parameter0: java.lang.Object;
        temp$0 = (long) 0;
        return temp$0;
    }

    public void <init>()
    {
        androidtests.TransactionAPI this;

        this := @this: androidtests.TransactionAPI;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }
}
